"use strict";(self.webpackChunkdesign_system_bycn=self.webpackChunkdesign_system_bycn||[]).push([[5867],{"./projects/components/src/lib/checkbox/checkbox.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{b:()=>MasCheckbox});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs");let MasCheckbox=class MasCheckbox{get checked(){return this._checked}set checked(value){this.checked!==value&&(this._checked=value,this.onModelChange(value),this._indeterminate&&(this._indeterminate=!1),this.cd.markForCheck())}get disabled(){return this._disabled}set disabled(value){value!==this._disabled&&(this._disabled=value)}set indeterminate(value){this._indeterminate!==value&&(this.checked&&(this.checked=!1),this._indeterminate=value,this.inputViewChild&&this.inputViewChild.nativeElement&&(this.inputViewChild.nativeElement.indeterminate=value),this.cd.markForCheck())}get indeterminate(){return this._indeterminate}constructor(cd){this.cd=cd,this.labelText="",this.identifier="",this.size="S",this._checked=!1,this._disabled=!1,this._indeterminate=!1,this.onChange=new core.EventEmitter,this.onModelChange=_=>{},this.onModelTouched=_=>{}}writeValue(obj){this.checked=obj,this.cd.markForCheck()}registerOnChange(fn){this.onModelChange=fn}registerOnTouched(fn){this.onModelTouched=fn}setDisabledState(val){this.disabled=val,this.cd.markForCheck()}handleChange(event){this.updateModel(event)}updateModel(event){let newModelValue=this.checked;this.onModelChange(newModelValue),this.formControl&&this.formControl.setValue(newModelValue),this.onChange.emit({checked:newModelValue,originalEvent:event})}_onInputClick(event,checkbox){this.onModelTouched(),this.disabled||(this.indeterminate&&(this._indeterminate=!1),this.checked=!this._checked,this.updateModel(event),checkbox.focus())}onBlur(){this.onModelTouched()}focus(){this.inputViewChild?.nativeElement.focus()}static#_=this.ctorParameters=()=>[{type:core.ChangeDetectorRef}];static#_2=this.propDecorators={formControl:[{type:core.Input}],labelText:[{type:core.Input}],identifier:[{type:core.Input}],size:[{type:core.Input}],checked:[{type:core.Input}],disabled:[{type:core.Input}],indeterminate:[{type:core.Input}],onChange:[{type:core.Output}],inputViewChild:[{type:core.ViewChild,args:["input"]}]}};MasCheckbox=(0,tslib_es6.Cg)([(0,core.Component)({selector:"mas-checkbox",template:'<div class="mas-checkbox" [ngClass]="{ \'mas-checkbox--large\': size === \'L\', \'mas-checkbox--disabled\': disabled }">\r\n  <input\r\n    class="hidden-accessible"\r\n    type="checkbox"\r\n    #input\r\n    [id]="identifier"\r\n    [checked]="checked"\r\n    [indeterminate]="indeterminate"\r\n    [disabled]="disabled"\r\n    (change)="handleChange($event)"\r\n    (blur)="onBlur()"\r\n  />\r\n  <div class="mas-checkbox_touch-target" (click)="_onInputClick($event, input)"></div>\r\n\r\n  <div class="mas-checkbox-box" [ngClass]="{ \'mas-checkbox-box--active\': checked || indeterminate }">\r\n    <ng-container *ngIf="checked && size === \'S\'">\r\n      <svg width="10" height="8" viewBox="0 0 10 8" fill="none" xmlns="http://www.w3.org/2000/svg">\r\n        <path d="M1 5L3 7L9 1" stroke="white" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />\r\n      </svg>\r\n    </ng-container>\r\n    <ng-container *ngIf="indeterminate && size === \'S\'">\r\n      <svg width="10" height="2" viewBox="0 0 10 2" fill="none" xmlns="http://www.w3.org/2000/svg">\r\n        <path d="M1 1H9" stroke="white" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />\r\n      </svg>\r\n    </ng-container>\r\n\r\n    <ng-container *ngIf="checked && size === \'L\'">\r\n      <svg width="14" height="11" viewBox="0 0 14 11" fill="none" xmlns="http://www.w3.org/2000/svg">\r\n        <path d="M1 7L4 10L13 1" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" />\r\n      </svg>\r\n    </ng-container>\r\n    <ng-container *ngIf="indeterminate && !checked && size === \'L\'">\r\n      <svg width="14" height="2" viewBox="0 0 14 2" fill="none" xmlns="http://www.w3.org/2000/svg">\r\n        <path d="M1 1H13" stroke="white" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round" />\r\n      </svg>\r\n    </ng-container>\r\n  </div>\r\n  <label *ngIf="labelText !== \'\'" class="mas-checkbox_label" [for]="identifier">{{ labelText }}</label>\r\n</div>',changeDetection:core.ChangeDetectionStrategy.OnPush,providers:[{provide:fesm2022_forms.kq,useExisting:(0,core.forwardRef)((()=>MasCheckbox)),multi:!0}]})],MasCheckbox)},"./projects/components/src/lib/checkbox/checkbox.module.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{D:()=>MasCheckboxModule});var tslib__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),_angular_core__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),_angular_common__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),_checkbox_component__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./projects/components/src/lib/checkbox/checkbox.component.ts");let MasCheckboxModule=class MasCheckboxModule{};MasCheckboxModule=(0,tslib__WEBPACK_IMPORTED_MODULE_0__.Cg)([(0,_angular_core__WEBPACK_IMPORTED_MODULE_1__.NgModule)({imports:[_angular_common__WEBPACK_IMPORTED_MODULE_2__.CommonModule],declarations:[_checkbox_component__WEBPACK_IMPORTED_MODULE_3__.b],exports:[_checkbox_component__WEBPACK_IMPORTED_MODULE_3__.b]})],MasCheckboxModule)},"./projects/showcases/components/stories/checkbox/reactive-form.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{WithReactiveForm:()=>WithReactiveForm,__namedExportsOrder:()=>__namedExportsOrder,default:()=>reactive_form_stories});var dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),checkbox_module=__webpack_require__("./projects/components/src/lib/checkbox/checkbox.module.ts"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");let CheckboxExample=class CheckboxExample{constructor(formBuilder){this.formBuilder=formBuilder}ngOnInit(){this.formGroup=this.formBuilder.group({checkbox:this.formBuilder.control(!1)})}toggleCheckbox(){const checkbox=this.formGroup.get("checkbox");null!==checkbox&&checkbox.setValue(!checkbox.value)}toggleDisable(){const checkbox=this.formGroup.get("checkbox");null!==checkbox&&(checkbox.disabled?checkbox.enable():checkbox.disable())}static#_=this.ctorParameters=()=>[{type:fesm2022_forms.ok}]};CheckboxExample=(0,tslib_es6.Cg)([(0,core.Component)({selector:"app-checkbox",template:'\n    <form [formGroup]="formGroup">\n      <mas-checkbox labelText="label Text" formControlName="checkbox"></mas-checkbox>\n    </form>\n    <br />\n\n    <div style="display: flex; ">\n      <button\n        (click)="toggleCheckbox()"\n        style="background-color: orange; border: solid 1px black; border-radius: 4px; padding: 2px; margin-right:10px "\n      >\n        Check\n      </button>\n      <br />\n      <button\n        (click)="toggleDisable()"\n        style="background-color: orange; border: solid 1px black; border-radius: 4px; padding: 2px"\n      >\n        Toggle disabled state\n      </button>\n    </div>\n  '})],CheckboxExample);const reactive_form_stories={component:CheckboxExample,argTypes:{},title:"Components/Selection controls/Checkbox",decorators:[(0,dist.moduleMetadata)({imports:[common.CommonModule,checkbox_module.D,fesm2022_forms.X1,checkbox_module.D],declarations:[CheckboxExample]})],render:()=>({props:{}})},WithReactiveForm={args:{}};WithReactiveForm.parameters={...WithReactiveForm.parameters,docs:{...WithReactiveForm.parameters?.docs,source:{originalSource:"{\n  args: {}\n}",...WithReactiveForm.parameters?.docs?.source}}};const __namedExportsOrder=["WithReactiveForm"]}}]);