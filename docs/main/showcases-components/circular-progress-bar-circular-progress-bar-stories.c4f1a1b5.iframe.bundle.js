"use strict";(self.webpackChunkdesign_system_bycn=self.webpackChunkdesign_system_bycn||[]).push([[1954],{"./projects/showcases/components/stories/circular-progress-bar/circular-progress-bar.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,States:()=>States,WithLabel:()=>WithLabel,__namedExportsOrder:()=>__namedExportsOrder,default:()=>circular_progress_bar_stories});var dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");let CircularProgressBar=class CircularProgressBar{constructor(){this.loadingText=null,this.errorText=null,this.successText=null,this.state="loading"}static#_=this.propDecorators={loadingText:[{type:core.Input}],errorText:[{type:core.Input}],successText:[{type:core.Input}],state:[{type:core.Input}]}};CircularProgressBar=(0,tslib_es6.Cg)([(0,core.Component)({selector:"circular-progress-bar",template:'<div style="display: flex;align-items: center;margin: 10px 5px">\r\n  <div  class="mas-progress-circular-bar mas-progress-circular-bar-{{state}}"> \r\n    <i *ngIf="state==\'loading\'" class="mas-progress-circular-bar-icon"></i> \r\n    <i *ngIf="state==\'success\'" class="mas-progress-circular-bar-icon mas-check-outlined mas-system-and-device--outlined "></i> \r\n    <i  *ngIf="state==\'error\'" class="mas-progress-circular-bar-icon mas-x-outlined mas-math-and-finance--outlined " ></i> \r\n  </div>\r\n  <div class="mas-progress-circular-bar-label">\r\n    <span *ngIf="loadingText!=\'\' && state==\'loading\'" >{{loadingText}}</span>\r\n    <span *ngIf="successText!=\'\' && state==\'success\'" >{{successText}}</span>\r\n    <span *ngIf="errorText!=\'\' && state==\'error\'" >{{errorText}}</span>\r\n  </div>\r\n</div>'})],CircularProgressBar);const circular_progress_bar_stories={title:"Components / Indicators / Circular Progress Bar",component:CircularProgressBar,decorators:[(0,dist.moduleMetadata)({declarations:[CircularProgressBar]})],render:({...args})=>({template:'\n            <circular-progress-bar\n              [state]="state"\n              [loadingText]="loadingText"\n              [successText]="successText"\n              [errorText]="errorText">\n            </circular-progress-bar>\n    ',props:args}),argTypes:{state:{type:{name:"string",required:!0},description:"The state of the circular progress bar. Available options: 'loading', 'success', 'error'.",defaultValue:"loading",control:"radio",options:["loading","success","error"]},loadingText:{type:{name:"string",required:!1},description:"The text description for the loading state.",defaultValue:"",control:"text"},successText:{type:{name:"string",required:!1},description:"The text description for the success state.",defaultValue:"",control:"text"},errorText:{type:{name:"string",required:!1},description:"The text description for the error state.",defaultValue:"",control:"text"}},parameters:{docs:{description:{component:"desc."}}}},Default={args:{state:"loading",loadingText:"",successText:"",errorText:""}},States=()=>({template:"\n  <circular-progress-bar\n    [state]=\"'loading'\">\n  </circular-progress-bar>\n\n  <circular-progress-bar\n    [state]=\"'success'\">\n  </circular-progress-bar>\n\n  <circular-progress-bar\n    [state]=\"'error'\">\n  </circular-progress-bar>\n  "}),WithLabel=()=>({template:"\n  <circular-progress-bar\n    [state]=\"'loading'\"\n    [loadingText]=\"'Label'\"\n    [successText]=\"'Label'\"\n    [errorText]=\"'Label'\">\n  </circular-progress-bar>\n\n  <circular-progress-bar\n    [state]=\"'success'\"\n    [loadingText]=\"'Label'\"\n    [successText]=\"'Label'\"\n    [errorText]=\"'Label'\">\n  </circular-progress-bar>\n\n  <circular-progress-bar\n    [state]=\"'error'\"\n    [loadingText]=\"'Label'\"\n    [successText]=\"'Label'\"\n    [errorText]=\"'Label'\">\n</circular-progress-bar>\n  "});Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{}",...Default.parameters?.docs?.source},description:{story:"Basic : A Circular Progress Bar with default settings",...Default.parameters?.docs?.description}}},States.parameters={...States.parameters,docs:{...States.parameters?.docs,source:{originalSource:"() => ({\n  template: `\n  <circular-progress-bar\n    [state]=\"'loading'\">\n  </circular-progress-bar>\n\n  <circular-progress-bar\n    [state]=\"'success'\">\n  </circular-progress-bar>\n\n  <circular-progress-bar\n    [state]=\"'error'\">\n  </circular-progress-bar>\n  `\n})",...States.parameters?.docs?.source}}},WithLabel.parameters={...WithLabel.parameters,docs:{...WithLabel.parameters?.docs,source:{originalSource:"() => ({\n  template: `\n  <circular-progress-bar\n    [state]=\"'loading'\"\n    [loadingText]=\"'Label'\"\n    [successText]=\"'Label'\"\n    [errorText]=\"'Label'\">\n  </circular-progress-bar>\n\n  <circular-progress-bar\n    [state]=\"'success'\"\n    [loadingText]=\"'Label'\"\n    [successText]=\"'Label'\"\n    [errorText]=\"'Label'\">\n  </circular-progress-bar>\n\n  <circular-progress-bar\n    [state]=\"'error'\"\n    [loadingText]=\"'Label'\"\n    [successText]=\"'Label'\"\n    [errorText]=\"'Label'\">\n</circular-progress-bar>\n  `\n})",...WithLabel.parameters?.docs?.source}}};const __namedExportsOrder=["Default","States","WithLabel"]}}]);