"use strict";(self.webpackChunkdesign_system_bycn=self.webpackChunkdesign_system_bycn||[]).push([[8848,1954],{"./projects/showcases/components/stories/circular-progress-bar/circular-progress-bar.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>MDXContent});__webpack_require__("./node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js"),C_projects_workspace_design_system_bycn_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/@mdx-js/react/lib/index.js"),_storybook_blocks__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/@storybook/blocks/dist/index.mjs"),_circular_progress_bar_stories__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./projects/showcases/components/stories/circular-progress-bar/circular-progress-bar.stories.ts");function _createMdxContent(props){const _components={a:"a",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",ul:"ul",...(0,C_projects_workspace_design_system_bycn_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_3__.R)(),...props.components};return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_4__.W8,{of:_circular_progress_bar_stories__WEBPACK_IMPORTED_MODULE_2__}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h1,{id:"circular-progress-bar",children:"Circular Progress Bar"}),"\n","\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"#overview",children:"Overview"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"#props",children:"Props"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"#usage",children:"Usage"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.li,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"#variants",children:"Variants"})}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"overview",children:"Overview"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Circular progress bar is employed to indicate ongoing actions and reassure users that their requests are in progress. While they don't offer specific insights into backend processes, they provide users with the assurance that their actions are being processed."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Particularly beneficial for actions involving data creation, updates, or deletions, especially when dealing with substantial datasets. They can be seamlessly integrated into various elements such as tables, triggered by primary or secondary button clicks, or even within modals"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_4__.Hl,{of:_circular_progress_bar_stories__WEBPACK_IMPORTED_MODULE_2__.Default}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"props",children:"Props"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_4__.H2,{}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"usage",children:"Usage"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Circular progress bar is employed to indicate ongoing actions and reassure users that their requests are in progress. While they don't offer specific insights into backend processes, they provide users with the assurance that their actions are being processed."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"variants",children:"Variants"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"states",children:"States"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:'The circular progress bar is used to indicate that a data-related process is currently being processed. This should necessarily be a short action, the outcome of which is known. The circular progress bar must lead to a state change, either to "success" or "default."'}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_4__.Hl,{of:_circular_progress_bar_stories__WEBPACK_IMPORTED_MODULE_2__.States}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h3,{id:"label",children:"Label"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"The label is used to provide information about the type of ongoing process. It is not mandatory."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_4__.Hl,{of:_circular_progress_bar_stories__WEBPACK_IMPORTED_MODULE_2__.WithLabel}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"guidelines",children:"Guidelines"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["Best practices are available ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://zeroheight.com/9b39bb2a0/p/1803fd-circular-progress-bar/b/75c0d1",rel:"nofollow",children:"here"})]}),"\n"]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"feedback--contact",children:"Feedback & contact"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.ul,{children:["\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.li,{children:["Help us improve this pattern by providing feedback, asking questions, and leaving any other comments ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.a,{href:"https://github.com/bouygues-construction/design-system-bycn/issues/new",rel:"nofollow",children:"here"})]}),"\n"]})]})}function MDXContent(props={}){const{wrapper:MDXLayout}={...(0,C_projects_workspace_design_system_bycn_node_modules_storybook_addon_docs_dist_shims_mdx_react_shim_mjs__WEBPACK_IMPORTED_MODULE_3__.R)(),...props.components};return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout,{...props,children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent,{...props})}):_createMdxContent(props)}},"./projects/showcases/components/stories/circular-progress-bar/circular-progress-bar.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,States:()=>States,WithLabel:()=>WithLabel,__namedExportsOrder:()=>__namedExportsOrder,default:()=>circular_progress_bar_stories});var dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");let CircularProgressBar=class CircularProgressBar{constructor(){this.loadingText=null,this.errorText=null,this.successText=null,this.state="loading"}static#_=this.propDecorators={loadingText:[{type:core.Input}],errorText:[{type:core.Input}],successText:[{type:core.Input}],state:[{type:core.Input}]}};CircularProgressBar=(0,tslib_es6.Cg)([(0,core.Component)({selector:"circular-progress-bar",template:'<div style="display: flex;align-items: center;margin: 10px 5px">\r\n  <div  class="mas-progress-circular-bar mas-progress-circular-bar-{{state}}"> \r\n    <i *ngIf="state==\'loading\'" class="mas-progress-circular-bar-icon"></i> \r\n    <i *ngIf="state==\'success\'" class="mas-progress-circular-bar-icon mas-check-outlined mas-system-and-device--outlined "></i> \r\n    <i  *ngIf="state==\'error\'" class="mas-progress-circular-bar-icon mas-x-outlined mas-math-and-finance--outlined " ></i> \r\n  </div>\r\n  <div class="mas-progress-circular-bar-label">\r\n    <span *ngIf="loadingText!=\'\' && state==\'loading\'" >{{loadingText}}</span>\r\n    <span *ngIf="successText!=\'\' && state==\'success\'" >{{successText}}</span>\r\n    <span *ngIf="errorText!=\'\' && state==\'error\'" >{{errorText}}</span>\r\n  </div>\r\n</div>'})],CircularProgressBar);const circular_progress_bar_stories={title:"Components / Indicators / Circular Progress Bar",component:CircularProgressBar,decorators:[(0,dist.moduleMetadata)({declarations:[CircularProgressBar]})],render:({...args})=>({template:'\n            <circular-progress-bar\n              [state]="state"\n              [loadingText]="loadingText"\n              [successText]="successText"\n              [errorText]="errorText">\n            </circular-progress-bar>\n    ',props:args}),argTypes:{state:{type:{name:"string",required:!0},description:"The state of the circular progress bar. Available options: 'loading', 'success', 'error'.",defaultValue:"loading",control:"radio",options:["loading","success","error"]},loadingText:{type:{name:"string",required:!1},description:"The text description for the loading state.",defaultValue:"",control:"text"},successText:{type:{name:"string",required:!1},description:"The text description for the success state.",defaultValue:"",control:"text"},errorText:{type:{name:"string",required:!1},description:"The text description for the error state.",defaultValue:"",control:"text"}},parameters:{docs:{description:{component:"desc."}}}},Default={args:{state:"loading",loadingText:"",successText:"",errorText:""}},States=()=>({template:"\n  <circular-progress-bar\n    [state]=\"'loading'\">\n  </circular-progress-bar>\n\n  <circular-progress-bar\n    [state]=\"'success'\">\n  </circular-progress-bar>\n\n  <circular-progress-bar\n    [state]=\"'error'\">\n  </circular-progress-bar>\n  "}),WithLabel=()=>({template:"\n  <circular-progress-bar\n    [state]=\"'loading'\"\n    [loadingText]=\"'Label'\"\n    [successText]=\"'Label'\"\n    [errorText]=\"'Label'\">\n  </circular-progress-bar>\n\n  <circular-progress-bar\n    [state]=\"'success'\"\n    [loadingText]=\"'Label'\"\n    [successText]=\"'Label'\"\n    [errorText]=\"'Label'\">\n  </circular-progress-bar>\n\n  <circular-progress-bar\n    [state]=\"'error'\"\n    [loadingText]=\"'Label'\"\n    [successText]=\"'Label'\"\n    [errorText]=\"'Label'\">\n</circular-progress-bar>\n  "});Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{}",...Default.parameters?.docs?.source},description:{story:"Basic : A Circular Progress Bar with default settings",...Default.parameters?.docs?.description}}},States.parameters={...States.parameters,docs:{...States.parameters?.docs,source:{originalSource:"() => ({\n  template: `\n  <circular-progress-bar\n    [state]=\"'loading'\">\n  </circular-progress-bar>\n\n  <circular-progress-bar\n    [state]=\"'success'\">\n  </circular-progress-bar>\n\n  <circular-progress-bar\n    [state]=\"'error'\">\n  </circular-progress-bar>\n  `\n})",...States.parameters?.docs?.source}}},WithLabel.parameters={...WithLabel.parameters,docs:{...WithLabel.parameters?.docs,source:{originalSource:"() => ({\n  template: `\n  <circular-progress-bar\n    [state]=\"'loading'\"\n    [loadingText]=\"'Label'\"\n    [successText]=\"'Label'\"\n    [errorText]=\"'Label'\">\n  </circular-progress-bar>\n\n  <circular-progress-bar\n    [state]=\"'success'\"\n    [loadingText]=\"'Label'\"\n    [successText]=\"'Label'\"\n    [errorText]=\"'Label'\">\n  </circular-progress-bar>\n\n  <circular-progress-bar\n    [state]=\"'error'\"\n    [loadingText]=\"'Label'\"\n    [successText]=\"'Label'\"\n    [errorText]=\"'Label'\">\n</circular-progress-bar>\n  `\n})",...WithLabel.parameters?.docs?.source}}};const __namedExportsOrder=["Default","States","WithLabel"]}}]);