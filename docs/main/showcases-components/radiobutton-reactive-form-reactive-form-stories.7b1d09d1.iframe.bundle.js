"use strict";(self.webpackChunkdesign_system_bycn=self.webpackChunkdesign_system_bycn||[]).push([[7556],{"./projects/components/src/lib/radiobutton/radiobutton.component.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{n:()=>MasRadioButton});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs");var core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs");let MasRadioButton=class MasRadioButton{get disabled(){return this._disabled}set disabled(value){value!==this._disabled&&(this._disabled=value)}constructor(cd){this.cd=cd,this.labelText="",this.identifier="",this.checked=!1,this._disabled=!1,this.value=null,this.size="S",this.onChange=new core.EventEmitter,this.onFocus=new core.EventEmitter,this.onBlur=new core.EventEmitter,this.radioChangeHandler=event=>{}}onClick(event){this.disabled||(this.inputViewChild.nativeElement.checked=!0,this.checked=this.inputViewChild.nativeElement.checked,this.radioChangeHandler({originalEvent:event,value:this.value,source:this}),this.onChange.emit({originalEvent:event,value:this.value,source:this}))}registerRadioChangeHandler(fn){this.radioChangeHandler=fn}_onChange(event){this.onClick(event)}focus(){this.inputViewChild.nativeElement.focus()}_onInputFocus(event){this.focused=!0,this.onFocus.emit(event)}_onInputBlur(event){this.focused=!1,this.onBlur.emit(event)}static#_=this.ctorParameters=()=>[{type:core.ChangeDetectorRef}];static#_2=this.propDecorators={labelText:[{type:core.Input}],identifier:[{type:core.Input}],name:[{type:core.Input}],checked:[{type:core.Input}],disabled:[{type:core.Input}],value:[{type:core.Input}],size:[{type:core.Input}],formControlName:[{type:core.Input}],onChange:[{type:core.Output}],onFocus:[{type:core.Output}],onBlur:[{type:core.Output}],inputViewChild:[{type:core.ViewChild,args:["rbutton"]}]}};MasRadioButton=(0,tslib_es6.Cg)([(0,core.Component)({selector:"mas-radio-button",template:'<div\r\n  class="mas-radio-button"\r\n  [ngClass]="{ \'mas-radio-button--large\': size === \'L\', \'mas-radio-button--disabled\': disabled }"\r\n>\r\n  <input\r\n    #rbutton\r\n    class="hidden-accessible"\r\n    type="radio"\r\n    id="{{ identifier }}"\r\n    [checked]="checked"\r\n    [disabled]="disabled"\r\n    (focus)="_onInputFocus($event)"\r\n    (blur)="_onInputBlur($event)"\r\n    (change)="_onChange($event)"\r\n    [name]="name"\r\n    [value]="value"\r\n  />\r\n  <div class="mas-radio-button_touch-target" (click)="onClick($event)"></div>\r\n  <div class="mas-radio-button-container" [ngClass]="{ \'mas-radio-button--active\': checked }">\r\n    <ng-container *ngIf="checked && size === \'S\'">\r\n      <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">\r\n        <circle id="radio" cx="8" cy="8" r="3" fill="white" />\r\n      </svg>\r\n    </ng-container>\r\n    <ng-container *ngIf="checked && size === \'L\'">\r\n      <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\r\n        <circle id="radio" cx="12" cy="12" r="5" fill="white" />\r\n      </svg>\r\n    </ng-container>\r\n  </div>\r\n  <label *ngIf="labelText !== \'\'" [for]="identifier" class="mas-radio-button_label">{{ labelText }}</label>\r\n</div>\r\n',providers:[{provide:fesm2022_forms.kq,useExisting:(0,core.forwardRef)((()=>MasRadioButton)),multi:!0}]})],MasRadioButton)},"./projects/components/src/lib/radiobutton/radiobutton.module.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{d:()=>MasRadioButtonModule});var MasRadioGroup_1,tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),radiobutton_component=__webpack_require__("./projects/components/src/lib/radiobutton/radiobutton.component.ts");let MasRadioGroup=class MasRadioGroup{constructor(){this.onChange=new core.EventEmitter,this.orientation="vertical",this._disabled=!1,this._name="radio-group-"+MasRadioGroup_1.radioCount++,this._selected=null,this._value=null,this.onModelChange=_=>{},this.onModelTouched=_=>{},this._controlValueAccessorChangeFn=()=>{},this._onTouched=()=>{}}static#_=MasRadioGroup_1=this;static#_2=this.radioCount=0;set name(value){this._name=value,this.updateRadios()}get name(){return this._name}set disabled(value){this._disabled=value}get disabled(){return this._disabled}set selected(selected){(this._selected&&this._selected.value)===(selected&&selected.value)||(this._selected&&(this._selected.checked=!1),this._selected=selected,this.value=selected?selected.value:null,this.checkSelectedRadio())}get selected(){return this._selected}set value(newValue){this._value!==newValue&&(this._value=newValue,this.updateSelectedRadioFromValue(),this.checkSelectedRadio(),this.onModelChange(newValue))}get value(){return this._value}checkSelectedRadio(){this.selected&&!this._selected.checked&&(this.selected.checked=!0)}updateSelectedRadioFromValue(){!(null!==this._selected&&this._selected.value===this._value)&&this.radios&&(this.selected&&this.value&&(this.selected.checked=!1),this._selected=null,this.radios?.forEach((radio=>{(radio.checked||radio.value===this._value)&&(this._selected=radio)})),this.selected&&!this.value&&(this.value=this.selected.value))}updateRadioChangeHandler(){this.radios?.forEach((radio=>{radio.registerRadioChangeHandler((event=>{(this.selected&&this.selected.value)!==event.value&&(this.selected&&(this.selected.checked=!1),this._selected=event.source,this.value=event.value,this.onChange.emit(event),this._controlValueAccessorChangeFn(event.value),this._onTouched())}))}))}updateRadios(){this.radios&&setTimeout((()=>{this.radios.forEach((radio=>{radio.name=this.name,radio.checked=this.value===radio.value}))}))}ngAfterContentInit(){this.radios.changes.subscribe((()=>{this.updateRadios(),this.updateRadioChangeHandler()})),this.updateRadioChangeHandler()}ngAfterViewInit(){this.updateRadios()}writeValue(value){this.value=value,this.updateSelectedRadioFromValue(),this.checkSelectedRadio()}registerOnChange(fn){this._controlValueAccessorChangeFn=fn}registerOnTouched(fn){this._onTouched=fn}setDisabledState(isDisabled){this.disabled=isDisabled}static#_3=this.propDecorators={onChange:[{type:core.Output}],radios:[{type:core.ContentChildren,args:[(0,core.forwardRef)((()=>radiobutton_component.n))]}],name:[{type:core.Input}],disabled:[{type:core.Input}],orientation:[{type:core.Input}],selected:[{type:core.Input}],value:[{type:core.Input}],label:[{type:core.Input}]}};MasRadioGroup=MasRadioGroup_1=(0,tslib_es6.Cg)([(0,core.Component)({selector:"mas-radio-group",template:'\n    <div class="mas-radio-group">\n      <ng-content></ng-content>\n    </div>\n  ',providers:[{provide:fesm2022_forms.kq,useExisting:MasRadioGroup,multi:!0}],host:{"[class.mas-radio-group--horizontal]":'orientation === "horizontal"',"[class.mas-radio-group--vertical]":'orientation === "vertical"'}})],MasRadioGroup);var common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs");let MasRadioButtonModule=class MasRadioButtonModule{};MasRadioButtonModule=(0,tslib_es6.Cg)([(0,core.NgModule)({imports:[common.CommonModule,fesm2022_forms.YN],exports:[radiobutton_component.n,MasRadioGroup],declarations:[radiobutton_component.n,MasRadioGroup]})],MasRadioButtonModule)},"./projects/showcases/components/stories/radiobutton/reactive-form/reactive-form.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{WithReactiveForm:()=>WithReactiveForm,__namedExportsOrder:()=>__namedExportsOrder,default:()=>reactive_form_stories});var dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),common=__webpack_require__("./node_modules/@angular/common/fesm2022/common.mjs"),fesm2022_forms=__webpack_require__("./node_modules/@angular/forms/fesm2022/forms.mjs"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");let RadioButtonExample=class RadioButtonExample{constructor(formBuilder){this.formBuilder=formBuilder}ngOnInit(){this.formGroup=this.formBuilder.group({radioGroup:new fesm2022_forms.MJ("1")})}toggleRadio(){const radioGroup=this.formGroup.get("radioGroup");null!==radioGroup&&radioGroup.setValue("2")}toggleDisable(){const radioGroup=this.formGroup.get("radioGroup");null!==radioGroup&&(radioGroup.disabled?radioGroup.enable():radioGroup.disable())}static#_=this.ctorParameters=()=>[{type:fesm2022_forms.ok}]};RadioButtonExample=(0,tslib_es6.Cg)([(0,core.Component)({selector:"app-radio-button",template:'\n    <form [formGroup]="formGroup">\n      <mas-radio-group formControlName="radioGroup" disabled="true" value="2">\n        <mas-radio-button labelText="Radio Button 1" value="1" [disabled]="formGroup.disabled"></mas-radio-button>\n        <mas-radio-button labelText="Radio Button 2" value="2" [disabled]="formGroup.disabled"></mas-radio-button>\n        <mas-radio-button labelText="Radio Button 3" value="3" [disabled]="formGroup.disabled"></mas-radio-button>\n      </mas-radio-group>\n    </form>\n    <br />\n    <div style="display: flex;">\n      <button\n        style="padding: 2px; background-color: orange; margin-right: 10px; border: solid 1px black; border-radius: 4px;"\n        (click)="toggleRadio()"\n      >\n        Set to \'2\'\n      </button>\n      <button\n        style="padding: 2px; background-color: orange; border: solid 1px black; border-radius: 4px;"\n        (click)="toggleDisable()"\n      >\n        Toggle disabled state\n      </button>\n    </div>\n  '})],RadioButtonExample);var radiobutton_module=__webpack_require__("./projects/components/src/lib/radiobutton/radiobutton.module.ts");const reactive_form_stories={component:RadioButtonExample,title:"Components/Selection controls/Radio Button",decorators:[(0,dist.moduleMetadata)({declarations:[RadioButtonExample],imports:[common.CommonModule,fesm2022_forms.X1,radiobutton_module.d]})],render:()=>({props:{}})},WithReactiveForm={args:{}};WithReactiveForm.parameters={...WithReactiveForm.parameters,docs:{...WithReactiveForm.parameters?.docs,source:{originalSource:"{\n  args: {}\n}",...WithReactiveForm.parameters?.docs?.source}}};const __namedExportsOrder=["WithReactiveForm"]}}]);