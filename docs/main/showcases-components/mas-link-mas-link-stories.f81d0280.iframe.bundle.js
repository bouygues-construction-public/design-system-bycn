"use strict";(self.webpackChunkdesign_system_bycn=self.webpackChunkdesign_system_bycn||[]).push([[1632],{"./projects/showcases/components/stories/mas-link/mas-link.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Directive:()=>Directive,LinkIcon:()=>LinkIcon,LinkSize:()=>LinkSize,Overview:()=>Overview,__namedExportsOrder:()=>__namedExportsOrder,default:()=>mas_link_stories});var dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs");let MasLink=class MasLink{constructor(){this.size="medium",this.standalone=!1,this.iconAlong=!1,this.href="#"}get classes(){return{"mas-link":!0,[`mas-link_size--${this.size}`]:!0,"mas-link--standalone":this.standalone,"mas-link--icon-along":this.iconAlong}}static#_=this.propDecorators={size:[{type:core.Input}],standalone:[{type:core.Input}],iconAlong:[{type:core.Input}],href:[{type:core.Input}]}};MasLink=(0,tslib_es6.Cg)([(0,core.Component)({selector:"mas-link",template:'\n    <a [ngClass]="classes" [href]="href">\n      <ng-content></ng-content>\n    </a>\n  '})],MasLink);let MasLinkDirective=class MasLinkDirective{constructor(elementRef,renderer){this.elementRef=elementRef,this.renderer=renderer,this.size="medium",this.standalone=!1,this.iconAlong=!1,this.href="#"}ngOnChanges(changes){this.applyLinkStyles()}applyLinkStyles(){const classes={"mas-link":!0,[`mas-link_size--${this.size}`]:!0,"mas-link--standalone":this.standalone,"mas-link--icon-along":this.iconAlong};this.renderer.removeClass(this.elementRef.nativeElement,"mas-link_size--medium"),this.renderer.removeClass(this.elementRef.nativeElement,"mas-link_size--small"),this.renderer.removeClass(this.elementRef.nativeElement,"mas-link_size--large");for(const className in classes)classes[className]?this.renderer.addClass(this.elementRef.nativeElement,className):this.renderer.removeClass(this.elementRef.nativeElement,className);this.renderer.setAttribute(this.elementRef.nativeElement,"href",this.href)}static#_=this.ctorParameters=()=>[{type:core.ElementRef},{type:core.Renderer2}];static#_2=this.propDecorators={size:[{type:core.Input}],standalone:[{type:core.Input}],iconAlong:[{type:core.Input}],href:[{type:core.Input}]}};MasLinkDirective=(0,tslib_es6.Cg)([(0,core.Directive)({selector:"[masLink]"})],MasLinkDirective);const mas_link_stories={title:"Components / Actions / Link",component:MasLink,decorators:[(0,dist.moduleMetadata)({declarations:[MasLink,MasLinkDirective]})],argTypes:{href:{type:{name:"string",required:!0},description:"The URL the link should navigate to. Default: '#'",defaultValue:"#",control:"text"},size:{type:{name:"string",required:!1},description:"The size of the link. Available options: 'small', 'medium', 'large'. Default: 'medium'",defaultValue:"medium",control:"radio",options:["small","medium","large"]},standalone:{type:{name:"boolean",required:!1},description:"Whether the link should have a standalone appearance. Default: false",defaultValue:!1,control:"boolean"},iconAlong:{type:{name:"boolean",required:!1},description:"Whether an icon should be displayed alongside the link text. Default: false",defaultValue:!1,control:"boolean"}},parameters:{docs:{description:{component:"Links serve as navigational elements and can be used independently or inline with text. They offer a lightweight option for navigation."}}},render:({...args})=>({template:'<mas-link [size]="size" [standalone]="standalone" [iconAlong]="iconAlong" [href]="href">\n                Link\n            </mas-link>',props:args})},Overview={args:{}},LinkIcon=()=>({template:'\n    <mas-link  iconAlong="true"  href="#">\n      Link\n    </mas-link>\n  '}),LinkSize={render:()=>({template:'\n      <div style="display: flex; gap: 20px">\n        <mas-link size="small"  href="#">\n          Small Link\n        </mas-link>\n        <mas-link size="medium"  href="#">\n          Medium Link\n        </mas-link>\n        <mas-link size="large"  href="#">\n          Large Link\n        </mas-link>\n      </div>\n    '})},Directive={render:()=>({template:'<a masLink [size]="size" [standalone]="standalone" [iconAlong]="iconAlong" \n                    href="https://www.example.com">Link</a>'}),args:{}};Overview.parameters={...Overview.parameters,docs:{...Overview.parameters?.docs,source:{originalSource:"{}",...Overview.parameters?.docs?.source},description:{story:"Basic : A link with default settings",...Overview.parameters?.docs?.description}}},LinkIcon.parameters={...LinkIcon.parameters,docs:{...LinkIcon.parameters?.docs,source:{originalSource:'() => ({\n  template: `\n    <mas-link  iconAlong="true"  href="#">\n      Link\n    </mas-link>\n  `\n})',...LinkIcon.parameters?.docs?.source}}},LinkSize.parameters={...LinkSize.parameters,docs:{...LinkSize.parameters?.docs,source:{originalSource:'{\n  render: () => ({\n    template: `\n      <div style="display: flex; gap: 20px">\n        <mas-link size="small"  href="#">\n          Small Link\n        </mas-link>\n        <mas-link size="medium"  href="#">\n          Medium Link\n        </mas-link>\n        <mas-link size="large"  href="#">\n          Large Link\n        </mas-link>\n      </div>\n    `\n  })\n}',...LinkSize.parameters?.docs?.source}}},Directive.parameters={...Directive.parameters,docs:{...Directive.parameters?.docs,source:{originalSource:'{\n  render: () => ({\n    template: `<a masLink [size]="size" [standalone]="standalone" [iconAlong]="iconAlong" \n                    href="https://www.example.com">Link</a>`\n  })\n}',...Directive.parameters?.docs?.source},description:{story:"Directive : A link with default settings",...Directive.parameters?.docs?.description}}};const __namedExportsOrder=["Overview","LinkIcon","LinkSize","Directive"]}}]);