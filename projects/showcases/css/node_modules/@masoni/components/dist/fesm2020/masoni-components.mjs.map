{"version":3,"file":"masoni-components.mjs","sources":["../../src/lib/text-input/text-input.component.ts","../../src/lib/text-input/text-input.component.html","../../src/lib/sub-elements/error.component.ts","../../src/lib/sub-elements/helper.component.ts","../../src/lib/sub-elements/label.component.ts","../../src/lib/text-input/text-input.module.ts","../../src/lib/select/option.component.ts","../../src/lib/select/select.component.ts","../../src/lib/select/select.component.html","../../src/lib/select/option-group.directive.ts","../../src/lib/select/select.module.ts","../../src/public-api.ts","../../src/masoni-components.ts"],"sourcesContent":["import { AfterViewInit, Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\r\nimport '@masoni/icons/dist/css/mas-icons.css';\r\nimport '@masoni/css-text-input/dist/index.css';\r\nimport {\r\n  ControlValueAccessor,\r\n  FormControl,\r\n  FormControlName,\r\n  NG_VALUE_ACCESSOR,\r\n  NgForm,\r\n  Validators,\r\n} from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'mas-text-input',\r\n  templateUrl: 'text-input.component.html',\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: MasTextInput,\r\n      multi: true,\r\n    },\r\n  ],\r\n  host: {\r\n    class: 'mas-text-input',\r\n    '[class.mas-text-input--invalid]': 'invalid',\r\n    '[class.mas-text-input--disabled]': 'disabled',\r\n    '[class.mas-text-input--filled]': 'filled',\r\n    '[class.mas-text-input--medium]': 'size === \"M\"',\r\n  },\r\n})\r\nexport class MasTextInput implements OnInit, ControlValueAccessor, AfterViewInit {\r\n  static textInputCount = 0;\r\n  @Input() identifier: string = `text-input-${MasTextInput.textInputCount++}`;\r\n  @Input()\r\n  get disabled(): boolean {\r\n    return this._disabled;\r\n  }\r\n  set disabled(value: boolean) {\r\n    this._disabled = value;\r\n    value ? this.input.disable() : this.input.enable();\r\n  }\r\n  protected _disabled: boolean = false;\r\n  @Input()\r\n  get labelText(): string {\r\n    return this._labelText;\r\n  }\r\n  set labelText(value: string) {\r\n    this._labelText = value;\r\n  }\r\n  protected input = new FormControl('');\r\n  protected _labelText: string;\r\n  protected _value: string = '';\r\n  model: any;\r\n  @ViewChild('textinput') inputViewChild: ElementRef | undefined;\r\n  @Input() formControlName: FormControlName | undefined;\r\n  @Input() placeholder: string = '';\r\n  @Input() required: boolean = false;\r\n  @Input() size: 'M' | 'S' = 'S';\r\n  @Input() formControl: FormControl | undefined;\r\n  @Input() type: 'search' | 'tel' | 'text' | 'password' | 'email' = 'text';\r\n  @Input() filled: boolean = false;\r\n  @Output() onChange: EventEmitter<any> = new EventEmitter();\r\n  @Output() inputChangeEvent: EventEmitter<string> = new EventEmitter();\r\n  @Input()\r\n  set invalid(value: boolean | undefined) {\r\n    this._invalid = value;\r\n  }\r\n  get invalid(): boolean | undefined {\r\n    if (this.input) {\r\n      return !this.input?.valid && this.input.touched;\r\n    }\r\n    return this._invalid;\r\n  }\r\n  protected _invalid: boolean | undefined = false;\r\n  set value(value: string) {\r\n    this._value = value;\r\n  }\r\n  get value(): string {\r\n    return this._value;\r\n  }\r\n  get empty() {\r\n    return this._value === '' ? true : false;\r\n  }\r\n  get leadingIcon(): string {\r\n    let icon: string = 'none';\r\n    switch (this.type) {\r\n      case 'search':\r\n        icon = 'mas-magnifyingglass-outlined';\r\n        break;\r\n      case 'email':\r\n        icon = 'mas-envelopesimple-outlined';\r\n        break;\r\n      case 'password':\r\n        icon = 'mas-lockkey-outlined';\r\n        break;\r\n      case 'tel':\r\n        icon = 'mas-phone-outlined';\r\n        break;\r\n    }\r\n    return icon;\r\n  }\r\n  get trailingIcon(): string {\r\n    return this.type === 'password' ? 'mas-eye-filled' : 'none';\r\n  }\r\n  protected onChangeHandler = (_: any) => {};\r\n  protected onTouchedHandler = () => {};\r\n  writeValue(obj: any): void {\r\n    this.input.setValue(obj);\r\n  }\r\n  registerOnChange(fn: any): void {\r\n    this.onChangeHandler = fn;\r\n  }\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouchedHandler = fn;\r\n  }\r\n  setDisabledState?(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n  updateModel(event: Event) {\r\n    let newModelValue = this.value;\r\n\r\n    this.onChangeHandler(newModelValue);\r\n    this.model = newModelValue;\r\n    if (this.formControl) {\r\n      this.formControl.setValue(newModelValue);\r\n    }\r\n    this.onChange.emit({ value: newModelValue, originalEvent: event });\r\n  }\r\n  handleChange(event: Event) {\r\n    this.updateModel(event);\r\n  }\r\n  showPassword(input: HTMLElement) {\r\n    if (input.getAttribute('type') === 'password') {\r\n      input.setAttribute('type', 'text');\r\n    } else {\r\n      input.setAttribute('type', 'password');\r\n    }\r\n  }\r\n  ngOnInit() {}\r\n  ngAfterViewInit(): void {\r\n    this.input.valueChanges.subscribe((value) => {\r\n      this.onChangeHandler(value?.trim());\r\n      this.value = value ?? '';\r\n    });\r\n    if (this.type === 'tel') {\r\n      this.input.addValidators(Validators.pattern(/[0-9\\+\\-\\ ]/));\r\n    } else if (this.type === 'email') {\r\n      this.input.addValidators(Validators.email);\r\n    }\r\n  }\r\n}\r\n","<ng-content select=\"mas-label\"></ng-content>\r\n<div class=\"mas-text-input_input-wrapper\">\r\n  <i *ngIf=\"leadingIcon !== 'none'\" class=\"{{ leadingIcon }} mas-icon mas-leading-icon\"></i>\r\n  <input\r\n    #textinput\r\n    [id]=\"identifier\"\r\n    class=\"mas-text-input_input mas-text-input-min-line\"\r\n    [type]=\"type\"\r\n    [placeholder]=\"placeholder\"\r\n    [required]=\"required\"\r\n    [formControl]=\"input\"\r\n    [value]=\"value\"\r\n    (change)=\"handleChange($event)\"\r\n  />\r\n  <i\r\n    *ngIf=\"trailingIcon !== 'none'\"\r\n    class=\"{{ trailingIcon }} mas-icon mas-trailing-icon\"\r\n    (click)=\"showPassword(textinput)\"\r\n  ></i>\r\n</div>\r\n<ng-content *ngIf=\"invalid\" select=\"mas-error\"></ng-content>\r\n<ng-content *ngIf=\"!invalid\" select=\"mas-helper\"></ng-content>","import { Component, NgModule, Input, OnInit, TemplateRef } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport '@masoni/css-sub-elements/dist/index.css';\r\n@Component({\r\n  selector: 'mas-error',\r\n  host: {\r\n    class: 'mas-error',\r\n    role: 'alert',\r\n  },\r\n  template: `\r\n    <i class=\"mas-icon mas-warningcircle-filled\"></i>\r\n    <ng-content *ngIf=\"!isTemplate(errorMessage)\"></ng-content>\r\n    <ng-template *ngIf=\"isTemplate(errorMessage)\" [ngTemplateOutlet]=\"errorMessage\"></ng-template>\r\n  `,\r\n})\r\nexport class MasError {\r\n  @Input() errorMessage: any | TemplateRef<any>;\r\n  public isTemplate(value: any) {\r\n    return value instanceof TemplateRef;\r\n  }\r\n}\r\n@NgModule({\r\n  declarations: [MasError],\r\n  imports: [CommonModule, FormsModule],\r\n  exports: [MasError],\r\n})\r\nexport class MasErrorModule {}\r\n","import { Component, NgModule, Input, OnInit, TemplateRef } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport '@masoni/css-sub-elements/dist/index.css';\r\n@Component({\r\n  selector: 'mas-helper',\r\n  host: {\r\n    class: 'mas-helper',\r\n  },\r\n  template: `\r\n    <ng-content *ngIf=\"!isTemplate(helperText)\"></ng-content>\r\n    <ng-template *ngIf=\"isTemplate(helperText)\" [ngTemplateOutlet]=\"helperText\"></ng-template>\r\n  `,\r\n})\r\nexport class MasHelper {\r\n  @Input() helperText: any | TemplateRef<any>; // ! can be TemplateRef\r\n  public isTemplate(value: any) {\r\n    return value instanceof TemplateRef; // ? what's this ?\r\n  }\r\n}\r\n@NgModule({\r\n  declarations: [MasHelper],\r\n  imports: [CommonModule, FormsModule],\r\n  exports: [MasHelper],\r\n})\r\nexport class MasHelperModule {}\r\n","import { CommonModule } from '@angular/common';\r\nimport { Component, Input, NgModule, OnInit } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'mas-label',\r\n  host: {\r\n    class: 'mas-label',\r\n  },\r\n  template: `\r\n    <label [for]=\"identifier\" class=\"mas-label-wrapper\">\r\n      <ng-content></ng-content>\r\n      <i *ngIf=\"infoIcon\" class=\"mas-question-outlined mas-label-info-icon\"></i>\r\n      <span *ngIf=\"optional\" class=\"mas-label-optional\">(optional)</span>\r\n    </label>\r\n  `,\r\n})\r\nexport class MasLabel implements OnInit {\r\n  @Input()\r\n  get identifier(): string {\r\n    return this._identifier;\r\n  }\r\n  set identifier(value: string) {\r\n    this._identifier = value;\r\n  }\r\n  private _identifier: string;\r\n  @Input() optional: boolean = false;\r\n  @Input() infoIcon: boolean = false;\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n\r\n@NgModule({\r\n  imports: [CommonModule, FormsModule],\r\n  exports: [MasLabel],\r\n  declarations: [MasLabel],\r\n})\r\nexport class MasLabelModule {}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { MasTextInput } from './text-input.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport {MasErrorModule, MasLabelModule, MasHelperModule} from '../sub-elements'\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MasErrorModule, MasLabelModule, MasHelperModule, ReactiveFormsModule],\r\n  declarations: [MasTextInput],\r\n  exports: [MasTextInput],\r\n  providers: [],\r\n})\r\nexport class MasTextInputModule {}\r\n","import { Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\r\nimport '@masoni/icons/dist/css/mas-icons.css';\r\n\r\n@Component({\r\n  selector: 'mas-option',\r\n  template: `<i class=\"mas-check-outlined mas-icon\" *ngIf=\"selected\"></i>\r\n    <span class=\"mas-typo_body-3 mas-option_text\" #text><ng-content></ng-content></span> `,\r\n  host: {\r\n    '[class.mas-option--selected]': '_selected',\r\n    class: 'mas-option',\r\n    '(click)': 'onOptionClick($event)',\r\n    role: 'option',\r\n  },\r\n})\r\nexport class MasOption {\r\n  private _selected: boolean = false;\r\n  @Input() value: any = '';\r\n  @Input() disabled: boolean;\r\n  @Input() size: 'S' | 'M' = 'S'; // todo: follow parent\r\n  @Output() onChange: EventEmitter<any> = new EventEmitter();\r\n  @Output() onClick: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\r\n  @ViewChild('text', { static: true }) _text: ElementRef<HTMLElement> | undefined;\r\n  get text(): any {\r\n    return this._text?.nativeElement.outerText;\r\n  }\r\n  get selected(): boolean {\r\n    return this._selected;\r\n  }\r\n  onOptionClick(event: Event) {\r\n    this.onChange.emit({ originalEvent: event, option: this });\r\n  }\r\n  select(): void {\r\n    if (!this._selected) {\r\n      this._selected = true;\r\n    }\r\n  }\r\n  deselect(): void {\r\n    if (this._selected) {\r\n      this._selected = false;\r\n    }\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  Component,\r\n  ContentChildren,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n  NgZone,\r\n  QueryList,\r\n  TemplateRef,\r\n  AfterContentInit,\r\n  HostListener,\r\n} from '@angular/core';\r\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport '@masoni/css-select/dist/index.css';\r\nimport { MasOption } from './option.component';\r\nimport { Observable, Subject, defer, map, merge, startWith, switchMap, take, takeUntil, tap } from 'rxjs';\r\nexport interface selectedOption {\r\n  option: MasOption | undefined;\r\n  isSelected: boolean;\r\n}\r\n@Component({\r\n  selector: 'mas-select',\r\n  templateUrl: './select.component.html',\r\n  providers: [\r\n    {\r\n      provide: NG_VALUE_ACCESSOR,\r\n      useExisting: MasSelect,\r\n      multi: true,\r\n    },\r\n  ],\r\n  host: {\r\n    class: 'mas-select',\r\n    '[class.mas-select--invalid]': 'invalid',\r\n    '[class.mas-select--disabled]': 'disabled',\r\n    '[class.mas-select--medium]': 'size === \"M\"',\r\n    '[class.mas-select--small]': 'size === \"S\"'\r\n  }\r\n})\r\nexport class MasSelect implements ControlValueAccessor, AfterContentInit {\r\n  static selectCount = 0;\r\n  protected _value: string = '';\r\n  protected selected: selectedOption = { option: undefined, isSelected: false };\r\n  private _panelOpen: boolean = false;\r\n  private _placeholder: string;\r\n\r\n  @Input() label: any | TemplateRef<any>;\r\n  @Input() identifier = `select-${MasSelect.selectCount++}`;\r\n  @Input() disabled: boolean = false;\r\n  @Input() invalid: boolean = false;\r\n  @Input() size: 'M' | 'S' = 'S';\r\n  @Input() filled: boolean = false;\r\n  @Input()\r\n  set value(value: string) {\r\n    this._value = value;\r\n  }\r\n  get value(): string {\r\n    if (this.empty) {\r\n      return '';\r\n    }\r\n    return this.options.filter((option) => option.selected)[0].value;\r\n  }\r\n  @Input()\r\n  get placeholder(): string {\r\n    return this._placeholder;\r\n  }\r\n  set placeholder(value: string) {\r\n    this._placeholder = value;\r\n  }\r\n  get panelOpen(): boolean {\r\n    return this._panelOpen;\r\n  }\r\n  @Output() change = new EventEmitter();\r\n  readonly _destroy = new Subject<void>();\r\n  get triggerValue() {\r\n    if (this.empty) {\r\n      return '';\r\n    }\r\n    return this.selected.option?.text;\r\n  }\r\n  get empty(): boolean {\r\n    return !this.options || this.selected.isSelected === false;\r\n  }\r\n  @ContentChildren(MasOption) options: QueryList<MasOption>;\r\n\r\n  ngAfterContentInit() {\r\n    this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\r\n      this._resetOptions();\r\n    });\r\n  }\r\n  constructor(protected _ngZone: NgZone, protected eRef: ElementRef) {}\r\n  @HostListener('document:click', ['$event'])\r\n  clickOut(event: Event) {\r\n    if (!this.eRef.nativeElement.contains(event.target)) {\r\n      this.close();\r\n    }\r\n  }\r\n  readonly optionChanges: Observable<any> = defer(() => {\r\n    const options = this.options;\r\n    if (options) {\r\n      return options.changes.pipe(\r\n        startWith(options),\r\n        switchMap(() => merge(...options.map((option) => option.onChange)))\r\n      );\r\n    }\r\n    return this._ngZone.onStable.pipe(\r\n      take(1),\r\n      switchMap(() => this.optionChanges)\r\n    );\r\n  }) as Observable<any>;\r\n  private _resetOptions(): void {\r\n    const changedOrDestroyed = merge(this.options.changes, this._destroy);\r\n    this.optionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe((event) => {\r\n      this._onSelect(event.option);\r\n      if (this._panelOpen) {\r\n        this.close();\r\n        this.focusOut();\r\n      }\r\n    });\r\n  }\r\n  private _onSelect(option: MasOption): void {\r\n    if (option.value == null) {\r\n      option.deselect();\r\n    } else if (!option.selected) {\r\n      this.options.map((option) => {\r\n        if (option.selected) option.deselect();\r\n      });\r\n      option.select();\r\n      this.selected.isSelected = true;\r\n      this.selected.option = this.options.filter((option) => option.selected)[0];\r\n    }\r\n  }\r\n  toggle() {\r\n    this.panelOpen ? this.close() : this.open();\r\n  }\r\n  open() {\r\n    this._panelOpen = true;\r\n  }\r\n  close() {\r\n    this._panelOpen = false;\r\n  }\r\n  focus() {}\r\n  onChange(event: any) {\r\n    this.onChangeHandler(event.target.value);\r\n    this.change.emit(event.target.value);\r\n  }\r\n  focusOut() {\r\n    this.onTouchedHandler();\r\n  }\r\n  public isTemplate(value: any) {\r\n    return value instanceof TemplateRef;\r\n  }\r\n\r\n  protected onChangeHandler = (_: any) => {};\r\n  protected onTouchedHandler = () => {};\r\n\r\n  writeValue(obj: any): void {\r\n    this.value = obj;\r\n  }\r\n  registerOnChange(fn: any): void {\r\n    this.onChangeHandler = fn;\r\n  }\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouchedHandler = fn;\r\n  }\r\n  setDisabledState?(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n}\r\n","<ng-content select=\"mas-label\"></ng-content>\r\n<div\r\n  class=\"mas-select_value-wrapper\"\r\n  [ngSwitch]=\"empty\"\r\n  (click)=\"toggle()\"\r\n  (change)=\"onChange($event)\"\r\n  [ngClass]=\"{ 'mas-select_listbox--opened': panelOpen }\"\r\n>\r\n  <i class=\"mas-warningcircle-outlined mas-icon\" *ngSwitchCase=\"true\"></i>\r\n  <span\r\n    class=\"mas-select-placeholder mas-select-min-line\"\r\n    *ngSwitchCase=\"true\"\r\n    [ngClass]=\"{ 'mas-select--filled': filled }\"\r\n    >{{ placeholder }}</span\r\n  >\r\n  <span class=\"mas-select_text mas-select-min-line\" *ngSwitchCase=\"false\">\r\n    {{ triggerValue }}\r\n  </span>\r\n  <i class=\"mas-caretdown-outlined mas-icon\"></i>\r\n</div>\r\n<!-- ! listbox -->\r\n<ng-template [ngIf]=\"panelOpen && !disabled\">\r\n    <div #select role=\"listbox\" [ngClass]=\"{ 'mas-select--disabled': disabled }\" class=\"mas-select_listbox-wrapper\">\r\n        <ng-content select=\"mas-option\"></ng-content>\r\n    </div>\r\n</ng-template>\r\n<ng-content *ngIf=\"invalid\" select=\"mas-error\"></ng-content>\r\n<ng-content *ngIf=\"!invalid\" select=\"mas-helper\"></ng-content>\r\n","import { Directive, HostBinding } from \"@angular/core\";\r\n\r\n@Directive({\r\n\t// tslint:disable-next-line\r\n\tselector: \"mas-option-group\"\r\n})\r\nexport class MasOptionGroup {\r\n\t@HostBinding(\"class\") inputClass = \"mas-option-group \";\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MasErrorModule, MasHelperModule, MasLabelModule } from '../sub-elements';\r\nimport { MasSelect } from './select.component';\r\nimport { MasOption } from './option.component';\r\nimport { MasOptionGroup } from './option-group.directive';\r\n@NgModule({\r\n  declarations: [MasSelect, MasOption, MasOptionGroup],\r\n  imports: [CommonModule, FormsModule, MasErrorModule, MasHelperModule, MasLabelModule],\r\n  exports: [MasSelect, MasOption, MasOptionGroup],\r\n})\r\nexport class MasSelectModule {}\r\n","/*\r\n * Public API Surface of components\r\n */\r\nexport * from './lib/text-input';\r\nexport * from './lib/select'\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}